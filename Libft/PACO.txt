FUNCTION         TESTS                RESULT
ft_isalpha       ✓✓✓✓✓✓✓              OK
ft_isdigit       ✓✓✓✓✓✓✓              OK
ft_isalnum       ✓✓✓✓✓✓✓              OK
ft_isascii       ✓✓✓✓✓✓✓✓             OK
ft_isprint       ✓✓✓✓✓✓✓              OK
ft_strlen        ✓✓✓✓✓✓               OK
ft_memset        ✓✓✓✓                 OK
ft_bzero         ✓✓                   OK
ft_memcpy        ✓✓✓                  OK
ft_memmove       AAAAA                KO
ft_strlcpy       ✓✓✓✓✓                OK
ft_strlcat       ✗✗✗✗✓✓✓✗✗            KO
ft_toupper       ✓✓✓✓✓✓✓              OK
ft_tolower       ✓✓✓✓✓✓✓              OK
ft_strchr        ✓✓✓✓✗✗               KO
ft_strrchr       TTTTTT✗T             KO
ft_strncmp       ✓✓✓✓✓✓✓✓✓✓✗          KO
ft_memchr        ✓✓✓✓✓✗               KO
ft_memcmp        ✓✗✗✗✓✓✓✗✓            KO
ft_strnstr       ✓✓✓✓✓✓✓✓✗✓           KO
ft_atoi          ✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓  OK
ft_calloc        ✓                    OK
ft_strdup        ✓                    OK
ft_substr        ✓✗✓✓✓                KO
ft_strjoin       AAA✓                 KO
ft_strtrim       compil. failed       KO
ft_split         compil. failed       KO
ft_itoa          ✓✓✓✓✓✓✓✓✓✓           OK
ft_strmapi       ✓                    OK
ft_striteri      ✓                    OK
ft_putchar_fd    ✓✓✓✓✓✓✓              OK
ft_putstr_fd     compil. failed       KO
ft_putendl_fd    ✓✓✓✓                 OK
ft_putnbr_fd     ✓✓✓✓✓✓✓✓✗            KO

Abort : A Bus error : B Segmentation fault : S Timeout : T

More information in: /Users/fragarci/francinette/temp/libft/war-machine/deepthought

Errors in memmove: /Users/fragarci/francinette/temp/libft/war-machine/tests/Part1_functions/ft_memmove
Test 1:
    if (dest != ft_memmove(dest, "consectetur", 5))
        write(1, "dest's adress was not returned\n", 31);
    write(1, dest, 22);
Expected (cat -e test01.output):
conseipsum dolor sit a
Your result (cat -e user_output_test01):

Test 2:
    if (dest != ft_memmove(dest, "con\0sec\0\0te\0tur", 10))
        write(1, "dest's adress was not returned\n", 31);
    write(1, dest, 22);
Expected (cat -e test02.output):
con^@sec^@^@t dolor sit a
Your result (cat -e user_output_test02):

Test 3:
    if (dest != ft_memmove(dest, src, 8))
        write(1, "dest's adress was not returned\n", 31);
    write(1, dest, 22);
Expected (cat -e test03.output):
lorem ipum dolor sit a
Your result (cat -e user_output_test03):

Test 4:
    if (src != ft_memmove(src, dest, 8))
        write(1, "dest's adress was not returned\n", 31);
    write(1, dest, 22);
Expected (cat -e test04.output):
rem ipssum dolor sit a
Your result (cat -e user_output_test04):

Test 5:
    if (src != ft_memmove(src, dest, 0))
        write(1, "dest's adress was not returned\n", 31);
    write(1, dest, 22);
Expected (cat -e test05.output):
orem ipsum dolor sit a
Your result (cat -e user_output_test05):

Errors in strlcat: /Users/fragarci/francinette/temp/libft/war-machine/tests/Part1_functions/ft_strlcat
Test 1:
    dest[11] = 'a';
    ft_print_result(ft_strlcat(dest, "lorem", 15));
    write(1, "\n", 1);
    write(1, dest, 15);
Expected (cat -e test01.output):
11$
rrrrrrlorem^@^@^@^@
...

File too large. To see full report open: /Users/fragarci/francinette/temp/libft/war-machine/errors.log

✖ Compiling tests: libftTester (https://github.com/Tripouille/libftTester)
tests/ft_strtrim_test.cpp:19:13: error: no matching function for call to 'ft_strtrim'
        char * s = ft_strtrim("   xxxtripouille", " x");
                   ^~~~~~~~~~
./libft.h:50:7: note: candidate function not viable: requires single argument 's', but 2 arguments were provided
char    *ft_strtrim(char const *s);
         ^
tests/ft_strtrim_test.cpp:23:6: error: no matching function for call to 'ft_strtrim'
        s = ft_strtrim("tripouille   xxx", " x");
            ^~~~~~~~~~
./libft.h:50:7: note: candidate function not viable: requires single argument 's', but 2 arguments were provided
char    *ft_strtrim(char const *s);
         ^
tests/ft_strtrim_test.cpp:27:6: error: no matching function for call to 'ft_strtrim'
        s = ft_strtrim("   xxxtripouille   xxx", " x");
            ^~~~~~~~~~
./libft.h:50:7: note: candidate function not viable: requires single argument 's', but 2 arguments were provided
char    *ft_strtrim(char const *s);
         ^
tests/ft_strtrim_test.cpp:31:6: error: no matching function for call to 'ft_strtrim'
        s = ft_strtrim("   xxx   xxx", " x");
            ^~~~~~~~~~
./libft.h:50:7: note: candidate function not viable: requires single argument 's', but 2 arguments were provided
char    *ft_strtrim(char const *s);
         ^
tests/ft_strtrim_test.cpp:35:6: error: no matching function for call to 'ft_strtrim'
        s = ft_strtrim("", "123");
            ^~~~~~~~~~
./libft.h:50:7: note: candidate function not viable: requires single argument 's', but 2 arguments were provided
char    *ft_strtrim(char const *s);
         ^
tests/ft_strtrim_test.cpp:39:6: error: no matching function for call to 'ft_strtrim'
        s = ft_strtrim("123", "");
            ^~~~~~~~~~
./libft.h:50:7: note: candidate function not viable: requires single argument 's', but 2 arguments were provided
char    *ft_strtrim(char const *s);
         ^
tests/ft_strtrim_test.cpp:43:6: error: no matching function for call to 'ft_strtrim'
        s = ft_strtrim("", "");
            ^~~~~~~~~~
./libft.h:50:7: note: candidate function not viable: requires single argument 's', but 2 arguments were provided
char    *ft_strtrim(char const *s);
         ^
tests/ft_strtrim_test.cpp:47:6: error: no matching function for call to 'ft_strtrim'
        s = ft_strtrim("abcdba", "acb");
            ^~~~~~~~~~
./libft.h:50:7: note: candidate function not viable: requires single argument 's', but 2 arguments were provided
char    *ft_strtrim(char const *s);
         ^
8 errors generated.

Problem compiling tests
✔ Compiling tests: libft-unit-test (https://github.com/alelievr/libft-unit-test)
ℹ Testing:
ft_isalpha      : [OK]
ft_isdigit      : [OK]
ft_isalnum      : [OK]
ft_isascii      : [OK]
ft_isprint      : [OK]
ft_strlen       : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_memset       : [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_bzero        : [OK] [OK] [OK] [OK]
ft_memcpy       : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_memmove      : [CRASH] [CRASH] [CRASH] [FAILED] [FAILED] [FAILED] [FAILED] [CRASH] [CRASH] [NO CRASH] [OK] [CRASH] [CRASH] [FAILED]
[crash]: your memmove does not work with basic input
[crash]: your memmove's return is false/does not work with basic input
[crash]: your memmove does not work with \0 and others unsigned char codes
[fail]: your memmove does not work with integers copy
[fail]: your memmove does not support the overlap (test 1)
[fail]: your memmove does not support the overlap (test 2)
[fail]: your memmove does not support the overlap
[crash]: your memmove does not work with a 128Mo data input !
[crash]: your memmove crash because it read too many bytes or attempt to read on dst !
[no crash]: your memmove does not segfault when null params is sent
[crash]: your memmove does not well with NULL as both parameters
[crash]: your memmove does not well with NULL as both parameters and size
[fail]: your memmove use malloc ? why ?

ft_strlcpy      : [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_strlcat      : [OK] [FAILED] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
[fail]: your strlcat does not work with basic input

ft_toupper      : [OK]
ft_tolower      : [OK]
ft_strchr       : [OK] [OK] [OK] [OK] [OK] [OK] [FAILED] [OK] [OK] [OK]
[fail]: your strchr does not work with \0

ft_strrchr      : [TIMEOUT] [TIMEOUT] [TIMEOUT] [TIMEOUT] [TIMEOUT] [OK] [TIMEOUT] [OK]
[timeout]: see the log file for informations
[timeout]: see the log file for informations
[timeout]: see the log file for informations
[timeout]: see the log file for informations
[timeout]: see the log file for informations
[timeout]: see the log file for informations

ft_strncmp      : [OK] [OK] [OK] [OK] [OK] [OK] [FAILED] [OK] [OK] [FAILED] [OK] [OK] [OK] [OK]
[fail]: your strncmp does not cast in unsigned char the diff
[fail]: your strncmp does not work with non ascii chars

ft_memchr       : [OK] [FAILED] [OK] [OK] [OK] [OK] [OK] [OK]
[fail]: your memchr does not cast in unsigned the memory

ft_memcmp       : [OK] [FAILED] [OK] [FAILED] [FAILED] [FAILED] [FAILED] [OK] [OK] [OK]
[fail]: your memcmp does not work with basic input
[fail]: your memcmp does not work with basic input
[fail]: your memcmp does not cast the memory in unsigned char
[fail]: your memcmp stop at \0
[fail]: your memcmp does not work with basic input

ft_strnstr      : [OK] [OK] [FAILED] [OK] [OK] [OK] [OK] [OK] [FAILED] [OK] [OK] [OK] [OK] [OK]
[fail]: your strnstr does not work with basic input
[fail]: your strnstr does not work with empty strings and 0 length

ft_atoi         : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [NO CRASH]
[no crash]: your atoi does not work with the plus sign and spaces

ft_calloc       : [OK] [OK] [OK] [OK] [OK]
ft_strdup       : [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_substr       : [OK] [FAILED] [OK] [OK] [FAILED] [CRASH] [OK] [OK] [OK]
[fail]: your substr does not work with valid input
[fail]: your substr does not set \0 to the end of the string
[crash]: you did not protect your malloc

ft_strjoin      : [OK] [OK] [OK] [OK] [OK]
ft_strtrim      : [FAILED] [OK] [OK] [OK] [OK] [KO] [FAILED] [OK] [FAILED]
[fail]: your strtrim does not work with basic input
[KO]: your strtrim did not allocate the good size so the \0 test may be false
[fail]: your strtrim does not allocate memory
[fail]: your strtrim does not set \0 to the end of the string

ft_split        : [MISSING]
ft_itoa         : [OK] [OK] [OK] [OK] [OK] [CRASH] [OK] [OK] [OK]
[crash]: you did not protect your malloc

ft_strmapi      : [OK] [OK] [OK] [OK] [OK]
ft_striteri     : [OK] [OK]
ft_putchar_fd   : [OK] [OK]
ft_putstr_fd    : [MISSING]
ft_putendl_fd   : [OK] [OK]
ft_putnbr_fd    : [OK] [OK] [FAILED] [OK] [FAILED]
[fail]: your putnbr_fd does not work with int min
[fail]: your putnbr_fd allocate memory, wtf ???
[crash]: your memmove does not work with basic input
 Test code:
 	char *src = "this is a good nyancat !\r\n";
 	char dst1[0xF0];
 	char dst2[0xF0];
 	int size = strlen(src);

 	__builtin___memmove_chk (dst1, src, size, __builtin_object_size (dst1, 0));
 	ft_memmove(dst2, src, size);
 	if (!memcmp(dst1, dst2, size))
 		exit(TEST_SUCCESS);
 	exit(TEST_FAILED);


 [crash]: your memmove's return is false/does not work with basic input
 Test code:
 	char *src = "thanks to @apellicc for this test !\r\n";
 	char dst1[0xF0];
 	int size = strlen(src);
 	char *r1 = __builtin___memmove_chk (dst1, src, size, __builtin_object_size (dst1, 0));
 	char *r2 = ft_memmove(dst1, src, size);

 	if (r1 != r2)
 		exit(TEST_FAILED);
 	r1 = __builtin___memmove_chk ("", "" - 1, 0, __builtin_object_size ("", 0));
 	r2 = ft_memmove("", "" - 1, 0);
 	if (r1 != r2)
 		exit(TEST_FAILED);
 	exit(TEST_SUCCESS);


 [crash]: your memmove does not work with \0 and others unsigned char codes
 Test code:
 	char *src = "thi\xffs i\xfas \0a g\xde\xadood \0nyan\0cat\0 !\r\n";
 	int size = 33;
 	char dst1[0xF0];
 	char dst2[0xF0];

 	__builtin___memmove_chk (dst1, src, size, __builtin_object_size (dst1, 0));
 	ft_memmove(dst2, src, size);
 	if (!memcmp(dst1, dst2, size))
 		exit(TEST_SUCCESS);
 	exit(TEST_FAILED);


 [fail]: your memmove does not work with integers copy
 Test code:
 	unsigned long src = 0xdeadbeef;
 	int size = sizeof(src);

...

File too large. To see full report open: /Users/fragarci/francinette/temp/libft/alelievr/result.log

✖ Compiling tests: fsoares (my own)
test_strtrim.c:7:41: error: too many arguments to function call, expected single argument 's', have 2 arguments
        check_alloc_str_return(ft_strtrim(str, set), expected);
                               ~~~~~~~~~~      ^~~
./my_utils.h:91:14: note: expanded from macro 'check_alloc_str_return'
        char *res = fn_call;                                     \
                    ^~~~~~~
./libft.h:50:1: note: 'ft_strtrim' declared here
char    *ft_strtrim(char const *s);
^
1 error generated.

Problem compiling the tests

Summary: no bonus

Failed tests: substr, split, memmove, itoa, strlcat, strjoin, strrchr, putstr_fd, strchr, putnbr_fd, memchr, strncmp, atoi, fsoares, strnstr, libftTester, memcmp, strtrim

Passed tests: isalpha, isdigit, isalnum, isascii, isprint, strlen, memset, bzero, memcpy, memmove, strlcpy, strlcat, toupper, tolower, strchr, strrchr, strncmp, memchr, memcmp, strnstr, atoi, calloc, strdup, substr, strjoin, strtrim, split, itoa, strmapi, striteri, putchar_fd, putstr_fd, putendl_fd, putnbr_fd